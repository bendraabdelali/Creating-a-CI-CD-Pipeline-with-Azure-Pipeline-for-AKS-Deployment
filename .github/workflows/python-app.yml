name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
env:
  IMAGE_NAME: "k8s-app"
  ConatinerName: "my-app"
  DOCKER_REPOSITORY_NAME: "abdbndr"
  IMAGE_TAG: "1.1.${{ github.run_number}}"
  
jobs:
  build:

    runs-on: ubuntu-latest
    container: python:3.9-slim

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest unittest2 nose
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics  
    - name: install docker 
      run: |
        apt-get update
        apt-get -y install curl
        apt-get -qq -y install curl
        
        curl -fsSL https://get.docker.com -o get-docker.sh
        chmod +x get-docker.sh
        sh get-docker.sh
        docker -v
        
    - name: install docker-compose 
      run: |
       curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
       chmod +x /usr/local/bin/docker-compose
       docker-compose --version
       docker-compose up -d --build
       
    - name: Test with unitests
      run: |      
         docker exec $ConatinerName  /bin/sh -c "python -m unittest"
     
  #  - name: Login to Docker Hub
  #    uses: docker/login-action@v2
  #   with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #  - name: Build and push
  #    uses: docker/build-push-action@v3
  #    with:
  #        push: true
  #        tags: "${{env.DOCKER_REPOSITORY_NAME}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}"
      
    - name: Trigger an Azure Pipelines to deploy into aks
      uses: Azure/pipelines@v1
      with: 
        azure-devops-project-url: 'https://dev.azure.com/abdelalibendra-etu/k8s-app'
        azure-pipeline-name: "bendraabdelali.K8S-APP-CI-CD" # name of the Azure pipeline to be triggered
        azure-devops-token: '${{ secrets.AZURE_DEVOPS_TOKEN }}'  
        
